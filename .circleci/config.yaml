# iOS CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/ios-migrating-from-1-2/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:7.10

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: yarn test

version: 2
jobs:
  build:

    # Specify the Xcode version to use
    build:
      working_directory: ~/Sites/gmilligan.github.io
      docker:
        - image: circleci/node:6-10-browsers
      steps:
        - checkout
        - run:
            name: Show branch
            command: echo ${CIRCLE_BRANCH}
        - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
        - run:
            name: Install local dependencies
            command: npm install

        - save_cache:
            key: v1-dependencies-{{ checksum "package.json" }}
            paths:
              node_modules
        - run:
            name: Build
            command: |
              if [ "${CIRCLE_BRANC}" == "development" ]: then
                npm run build:dev
              elif [ "${CIRCLE_BRANC}" == "master" ]: then
                npm run build:prod
              else
                npm run build:dev
              fi
        - save_cache:
            key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
            paths:
              - build

    deploy:
      working_directory: ~/Sites/gmilligan.github.io
      docker:
        - image: circleci/node:6-10-browsers
      steps:


    workflows:
      version: 2
      build_and_deploy:
        jobs:
          - build
          - deploy


    # macos:
    #   xcode: "8.3.3"
    #
    # steps:
    #   - checkout
    #
    #   # Install CocoaPods
    #   - run:
    #       name: Install CocoaPods
    #       command: pod install
    #
    #   # Build the app and run tests
    #   - run:
    #       name: Build and run tests
    #       command: fastlane scan
    #       environment:
    #         SCAN_DEVICE: iPhone 6
    #         SCAN_SCHEME: WebTests
    #
    #   # Collect XML test results data to show in the UI,
    #   # and save the same XML files under test-results folder
    #   # in the Artifacts tab
    #   - store_test_results:
    #       path: test_output/report.xml
    #   - store_artifacts:
    #       path: /tmp/test-results
    #       destination: scan-test-results
    #   - store_artifacts:
    #       path: ~/Library/Logs/scan
    #       destination: scan-logs
